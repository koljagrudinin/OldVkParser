1. Суть приложения

Робот по расписанию начинает обход заданных групп ВКонтакте.
Считать ряд метрик (таких как число участников, число постов и т.п.)
	 и записать результаты скинрования в базу данных.

2. Технические детали робота

2.1. Общие требования

Робот реализуется на C# 4.0.
База данных - SQLServer 2008 Web
Робот реализовается как отдельный проект в рамках решения.
Робот запускается внешним вызовом, 
	работает асинхронно, 
	результаты сообщает поднимая евенты. 
	Робот с БД не работает.

2.2.1. Считываемые базовые метрики

* количество участников 
	http://api.vk.com/method/groups.getMembers.xml?count=1&gid=habr&access_token=9582336595c04d1195c04d114195ebe993895c095d56d0ff6feb34316669cdb&sig=938dc53bfdc8d6df880c97d72ae7da41
* количество записей на стене 
	http://api.vk.com/method/wall.get.xml?owner_id=-20629724&access_token=9582336595c04d1195c04d114195ebe993895c095d56d0ff6feb34316669cdb&sig=4959c721a614aa493503525ab15f2cc8
* количество видеозаписей 
	http://api.vk.com/method/video.get.xml?count=1&gid=habr&access_token=9582336595c04d1195c04d114195ebe993895c095d56d0ff6feb34316669cdb&sig=7765616bae38734e6bff50bc299fd227
* количество аудиозаписей 
	http://api.vk.com/method/audio.getCount.xml?oid=-20629724&access_token=9582336595c04d1195c04d114195ebe993895c095d56d0ff6feb34316669cdb&sig=90a890255bd8eaf36feb67a1a82e48c6

2.2.2. Считываемые списки

* список участников	
	http://api.vk.com/method/groups.getMembers.xml?gid=20629724&access_token=9582336595c04d1195c04d114195ebe993895c095d56d0ff6feb34316669cdb&sig=63d447fb407021db9962f338649a5fa5
* список постов	
	http://api.vk.com/method/wall.get.xml?owner_id=-20629724&access_token=9582336595c04d1195c04d114195ebe993895c095d56d0ff6feb34316669cdb&sig=4959c721a614aa493503525ab15f2cc8
* списки лайков к каждому из постов (id пользователей оставивших их)	
	http://api.vk.com/method/likes.getList.xml?item_id=105809&owner_id=-20629724&post_id=105809&type=post&access_token=9582336595c04d1195c04d114195ebe993895c095d56d0ff6feb34316669cdb&sig=c55875bb75a3d49b6234080897485029
* списки комментариев к каждому из постов (id пользователей оставивших их)	
	http://api.vk.com/method/wall.getComments.xml?owner_id=-20629724&post_id=105809&access_token=9582336595c04d1195c04d114195ebe993895c095d56d0ff6feb34316669cdb&sig=aacb217ff3e3fac2a68c874a8b1172ff
* списки лайков к каждому из комментариев к (id пользователей оставивших их)	
	http://api.vk.com/method/likes.getList.xml?item_id=105812&owner_id=-20629724&post_id=105809&type=comment&access_token=9582336595c04d1195c04d114195ebe993895c095d56d0ff6feb34316669cdb&sig=29a3ed59d7609a278df8d61b9a32abf9

2.4. Список аккаунтов для робота

В отдельной таблице храним токены и секретные ключи.

2.3. Конфиг робота

Конфиг - это список групп и настройки их сканирования.
Каждой группе можно прописать настройки:
* Список юзеров, которых можно использовать для входа в ВКонтакте
* Регулярность считывания базовых метрик
* Таймаут считывания базовых метрик
* Регулярность считывания списков
* Таймаут считывания списков

3. Планировщик

Планировщик работает с таблицой конфига и запускает робота. 
	Если операция превышает таймаут, обрывает процесс.
Результаты операции планировщик 
	сохраняет в БД (таблица опреаций: время, успех, время сканирования и т.п. 
	и таблицы результатов: конкретные значения).

Планировщик реализовывается как Windows Service